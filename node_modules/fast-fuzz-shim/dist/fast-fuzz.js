"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fuzzSkipProp = exports.fuzzSkipMethod = exports.fuzzSkipArg = exports.fuzzPropType = exports.fuzzProp = exports.fuzzMethod = exports.fuzzArgType = exports.fuzzArg = exports.fuzz = void 0;
require("reflect-metadata");
const decorators_1 = require("./decorators");
let fuzz = function (_folder, _threads, _maxTime = 1e4, _methodPattern, _classPattern, _filePattern, _src, _dist, _verbose = false, _force = false, _resultsOut = []) {
    return __awaiter(this, void 0, void 0, function* () {
        throw new Error('Not implemented');
    });
};
exports.fuzz = fuzz;
let fuzzArg = decorators_1.arg;
exports.fuzzArg = fuzzArg;
let fuzzArgType = decorators_1.argType;
exports.fuzzArgType = fuzzArgType;
let fuzzMethod = decorators_1.method;
exports.fuzzMethod = fuzzMethod;
let fuzzProp = decorators_1.prop;
exports.fuzzProp = fuzzProp;
let fuzzPropType = decorators_1.propType;
exports.fuzzPropType = fuzzPropType;
let fuzzSkipArg = decorators_1.skipArg;
exports.fuzzSkipArg = fuzzSkipArg;
let fuzzSkipMethod = decorators_1.skipMethod;
exports.fuzzSkipMethod = fuzzSkipMethod;
let fuzzSkipProp = decorators_1.skipProp;
exports.fuzzSkipProp = fuzzSkipProp;
try {
    const { fuzz: fuzzDev, fuzzArg: fuzzArgDev, fuzzArgType: fuzzArgTypeDev, fuzzMethod: fuzzMethodDev, fuzzProp: fuzzPropDev, fuzzPropType: fuzzPropTypeDev, fuzzSkipArg: fuzzSkipArgDev, fuzzSkipMethod: fuzzSkipMethodDev, fuzzSkipProp: fuzzSkipPropDev } = require('fast-fuzz');
    exports.fuzz = fuzz = fuzzDev;
    exports.fuzzArg = fuzzArg = fuzzArgDev;
    exports.fuzzArgType = fuzzArgType = fuzzArgTypeDev;
    exports.fuzzMethod = fuzzMethod = fuzzMethodDev;
    exports.fuzzProp = fuzzProp = fuzzPropDev;
    exports.fuzzPropType = fuzzPropType = fuzzPropTypeDev;
    exports.fuzzSkipArg = fuzzSkipArg = fuzzSkipArgDev;
    exports.fuzzSkipMethod = fuzzSkipMethod = fuzzSkipMethodDev;
    exports.fuzzSkipProp = fuzzSkipProp = fuzzSkipPropDev;
}
catch (error) {
}
