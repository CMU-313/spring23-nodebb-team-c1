import 'reflect-metadata';
import { Results } from './result';
declare let fuzz: (_folder: string, _threads?: number, _maxTime?: number, _methodPattern?: string, _classPattern?: string, _filePattern?: string, _src?: string, _dist?: string, _verbose?: boolean, _force?: boolean, _resultsOut?: Results[]) => Promise<never>;
declare let fuzzArg: (_type: import("./decorators").BuiltIn, _dimension?: number, _min?: number, _max?: number) => ParameterDecorator;
declare let fuzzArgType: (_type: string, _dimension?: number) => ParameterDecorator;
declare let fuzzMethod: MethodDecorator;
declare let fuzzProp: (_type: import("./decorators").BuiltIn, _dimension?: number, _min?: number, _max?: number) => PropertyDecorator;
declare let fuzzPropType: (_typeName: string, _dimension?: number) => PropertyDecorator;
declare let fuzzSkipArg: ParameterDecorator;
declare let fuzzSkipMethod: MethodDecorator;
declare let fuzzSkipProp: PropertyDecorator;
export { fuzz, fuzzArg, fuzzArgType, fuzzMethod, fuzzProp, fuzzPropType, fuzzSkipArg, fuzzSkipMethod, fuzzSkipProp };
