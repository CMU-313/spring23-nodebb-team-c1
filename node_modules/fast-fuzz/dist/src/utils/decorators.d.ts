import { GeneratorType } from "../generators/GeneratorType";
import { IGenerator } from "../generators/IGenerator";
import { ModuleMethod, ModuleType, TestMethod } from "./modules";
export type BuiltIn = 'boolean' | 'integer' | 'float' | 'date' | 'string';
export declare class MethodArg {
    index: number;
    type: BuiltIn | string;
    dimension: number;
    isSkip: boolean;
    min?: number;
    max?: number;
}
export declare class Decorators {
    private static fileName?;
    private static className?;
    private static methodName?;
    private static lastIndex?;
    private static args;
    static addArgument(target: any, key: string | symbol, arg: MethodArg): void;
    static addMethod(target: any, key: string | symbol, file: string, method: ModuleMethod): TestMethod;
    static addMethodArgs(args: MethodArg[], file: string, method: ModuleMethod): {
        generators: IGenerator[];
        typeGenerators: GeneratorType[];
    };
    static skipMethod(target: any, key: string | symbol): void;
    static getPropType(typeName: string): ModuleType;
    static getFileName(index: number): string;
    static getMethodName(target: any): string;
    private static checkMethod;
    private static resetMethod;
}
