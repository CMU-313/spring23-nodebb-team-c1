import { GeneratorType } from "../generators/GeneratorType";
import { IGenerator } from "../generators/IGenerator";
import { MethodArg } from "./decorators";
export declare class ModuleMethod {
    name: string;
    className?: string;
    namespaces: string[];
    isAbstract: boolean;
    isAsync: boolean;
    isStatic: boolean;
    args: string[];
    literals: string[];
    IArgs: [string, string];
    test: TestMethod;
    constructor(init: Partial<ModuleMethod>);
}
export declare class TestMethod {
    args: MethodArg[];
    isStart: boolean;
    generators: IGenerator[];
    typeGenerators: GeneratorType[];
    callArgs?: any[];
    callArgsTypes?: {
        index: number;
        dimension: number;
        types: ModuleType[];
    }[];
    instance?: any;
    instanceType?: ModuleType;
}
export declare class ModuleType {
    name: string;
    namespaces: string[];
    file: string;
    kind: 'interface' | 'class' | 'enum';
    isAbstract?: boolean;
    inherits: [string, string][];
    extends?: ModuleType[];
    constructor(init: ModuleType);
}
