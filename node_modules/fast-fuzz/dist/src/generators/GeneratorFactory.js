"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GeneratorFactory = void 0;
const GeneratorBool_1 = require("./GeneratorBool");
const GeneratorDate_1 = require("./GeneratorDate");
const GeneratorEnum_1 = require("./GeneratorEnum");
const GeneratorFloat_1 = require("./GeneratorFloat");
const GeneratorInt_1 = require("./GeneratorInt");
const GeneratorString_1 = require("./GeneratorString");
const GeneratorType_1 = require("./GeneratorType");
class GeneratorFactory {
    static init(type, dimension = 0, literals, index, min, max) {
        switch (type) {
            case 'boolean':
                return new GeneratorBool_1.GeneratorBool(dimension, index);
            case 'integer':
                return new GeneratorInt_1.GeneratorInt(dimension, literals, min, max, index);
            case 'float':
                return new GeneratorFloat_1.GeneratorFloat(dimension, literals, min, max, index);
            case 'date':
                return new GeneratorDate_1.GeneratorDate(dimension, literals, min, max, index);
            case 'string':
                return new GeneratorString_1.GeneratorString(dimension, literals, min, max, index);
            default:
                break;
        }
        return null;
    }
    static initType(type, dimension = 0, index, mode, isIgnoreFalsy = false) {
        if (type.kind === 'enum') {
            return new GeneratorEnum_1.GeneratorEnum(type, dimension, index);
        }
        else {
            return new GeneratorType_1.GeneratorType(type, dimension, index, mode, isIgnoreFalsy);
        }
    }
}
exports.GeneratorFactory = GeneratorFactory;
