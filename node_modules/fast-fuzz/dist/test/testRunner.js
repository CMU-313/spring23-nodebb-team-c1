"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.init = void 0;
const fs_1 = __importDefault(require("fs"));
const chai_1 = require("chai");
const execShellCommand = require("../execShellCommand.js");
const results = {};
function init(name, time = 15e3) {
    return __awaiter(this, void 0, void 0, function* () {
        if (results[name] === undefined) {
            const fileName = './test/sut/fuzzInstances.json';
            if (name !== 'Stuff' && fs_1.default.existsSync(fileName)) {
                fs_1.default.unlinkSync(fileName);
            }
            const cliResult = yield execShellCommand(`node ./dist/src/index.js -i "./test/sut" -s "./" -d "../../dist/test/sut" -c "${name}" -t ${time} -n 2 -q true`);
            let error;
            try {
                results[name] = JSON.parse(cliResult);
            }
            catch (e) {
                error = e;
            }
            chai_1.assert.ok(error === undefined);
        }
        return results[name];
    });
}
exports.init = init;
